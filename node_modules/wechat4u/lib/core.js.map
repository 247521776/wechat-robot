{"version":3,"sources":["../src/core.js"],"names":["debug","WechatCore","data","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","COOKIE","user","botData","request","Cookie","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","equal","code","catch","err","tips","params","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","fun","pm","headers","forEach","test","item","Date","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SKey","updateSyncKey","Object","assign","User","to","pass_ticket","lang","API_webwxstatusnotify","seq","API_webwxgetcontact","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","retcode","SYNCCHECK_RET_SUCCESS","selector","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","toUserName","name","size","ext","mediatype","reject","File","constructor","Blob","Buffer","isBuffer","Error","lookup","readable","path","basename","pipe","buffer","toLowerCase","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","append","toGMTString","encodeURI","contentType","knownLength","getHeaders","f","API_webwxuploadmedia","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","MsgType","Content","replace","SubMsgType","MSGTYPE_LOCATION","Type","OriContent","EmojiFlag","Scene","MSGTYPE_MICROVIDEO","MSGTYPE_APP","AppMsgType","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","FileName","sender","mediaid","fromuser","webwx_data_ticket","API_webwxdownloadmedia","Ticket","API_webwxverifyuser","content","NickName","Topic","MemberList","MemberCount","API_webwxcreatechatroom","ChatRoomUserName","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","RemarkName","CmdId","API_webwxoplog","NewName","NewTopic","console","log","SvrMsgId","ClientMsgId","API_webwxrevokemsg","Uin","parseInt","Sid","Skey","DeviceID","keys","key"],"mappings":"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","file":"core.js","sourcesContent":["import path from 'path'\r\nimport bl from 'bl'\r\nimport _debug from 'debug'\r\nimport FormData from 'form-data'\r\nimport mime from 'mime'\r\nimport {\r\n  getCONF,\r\n  Request,\r\n  isStandardBrowserEnv,\r\n  assert,\r\n  getClientMsgId,\r\n  getDeviceID\r\n} from './util'\r\n\r\nconst debug = _debug('core')\r\n\r\nexport default class WechatCore {\r\n\r\n  constructor (data) {\r\n    this.PROP = {\r\n      uuid: '',\r\n      uin: '',\r\n      sid: '',\r\n      skey: '',\r\n      passTicket: '',\r\n      formatedSyncKey: '',\r\n      webwxDataTicket: '',\r\n      syncKey: {\r\n        List: []\r\n      }\r\n    }\r\n    this.CONF = getCONF()\r\n    this.COOKIE = {}\r\n    this.user = {}\r\n    if (data) {\r\n      this.botData = data\r\n    }\r\n\r\n    this.request = new Request({\r\n      Cookie: this.COOKIE\r\n    })\r\n  }\r\n\r\n  get botData () {\r\n    return {\r\n      PROP: this.PROP,\r\n      CONF: this.CONF,\r\n      COOKIE: this.COOKIE,\r\n      user: this.user\r\n    }\r\n  }\r\n\r\n  set botData (data) {\r\n    Object.keys(data).forEach(key => {\r\n      Object.assign(this[key], data[key])\r\n    })\r\n  }\r\n\r\n  getUUID () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_jsLogin\r\n      }).then(res => {\r\n        let window = {\r\n          QRLogin: {}\r\n        }\r\n        // res.data: \"window.QRLogin.code = xxx; ...\"\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.equal(window.QRLogin.code, 200, res)\r\n\r\n        this.PROP.uuid = window.QRLogin.uuid\r\n        return window.QRLogin.uuid\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取UUID失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  checkLogin () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'tip': 0,\r\n        'uuid': this.PROP.uuid,\r\n        'loginicon': true\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_login,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {}\r\n\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.notEqual(window.code, 400, res)\r\n\r\n        if (window.code === 200) {\r\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\r\n          this.rediUri = window.redirect_uri\r\n        } else if (window.code === 201 && window.userAvatar) {\r\n          // this.user.userAvatar = window.userAvatar\r\n        }\r\n        return window\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取手机确认登录信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  login () {\r\n    return Promise.resolve().then(() => {\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.rediUri,\r\n        params: {\r\n          fun: 'new'\r\n        }\r\n      }).then(res => {\r\n        let pm = res.data.match(/<ret>(.*)<\\/ret>/)\r\n        if (pm && pm[1] === '0') {\r\n          this.PROP.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\r\n          this.PROP.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\r\n          this.PROP.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\r\n          this.PROP.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\r\n        }\r\n        if (res.headers['set-cookie']) {\r\n          res.headers['set-cookie'].forEach(item => {\r\n            if (/webwx.*?data.*?ticket/i.test(item)) {\r\n              this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\r\n            } else if (/wxuin/i.test(item)) {\r\n              this.PROP.uin = item.match(/=(.*?);/)[1]\r\n            } else if (/wxsid/i.test(item)) {\r\n              this.PROP.sid = item.match(/=(.*?);/)[1]\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '登录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  init () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'skey': this.PROP.skey,\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxinit,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        this.updateSyncKey(data)\r\n        Object.assign(this.user, data.User)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '微信初始化失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  notifyMobile (to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        lang: 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Code': to ? 1 : 3,\r\n        'FromUserName': this.user['UserName'],\r\n        'ToUserName': to || this.user['UserName'],\r\n        'ClientMsgId': getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxstatusnotify,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '手机状态通知失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getContact (seq = 0) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'lang': 'zh_CN',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'seq': seq,\r\n        'skey': this.PROP.skey,\r\n        'r': +new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxgetcontact,\r\n        params: params\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取通讯录失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  batchGetContact (contacts) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'type': 'ex',\r\n        'r': +new Date(),\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': contacts.length,\r\n        'List': contacts\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxbatchgetcontact,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        return data.ContactList\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '批量获取联系人失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  statReport (text) {\r\n    return Promise.resolve().then(() => {\r\n      text = text || {\r\n        'type': '[action-record]',\r\n        'data': {\r\n          'actions': [{\r\n            'type': 'click',\r\n            'action': '发送框',\r\n            'time': +new Date()\r\n          }]\r\n        }\r\n      }\r\n      text = JSON.stringify(text)\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'new',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Count': 1,\r\n        'List': [{\r\n          'Text': text,\r\n          'Type': 1\r\n        }]\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxreport,\r\n        params: params,\r\n        data: data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '状态报告失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  syncCheck () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'r': +new Date(),\r\n        'sid': this.PROP.sid,\r\n        'uin': this.PROP.uin,\r\n        'skey': this.PROP.skey,\r\n        'deviceid': getDeviceID(),\r\n        'synckey': this.PROP.formatedSyncKey\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_synccheck,\r\n        params: params\r\n      }).then(res => {\r\n        let window = {\r\n          synccheck: {}\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        eval(res.data)\r\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\r\n\r\n        return window.synccheck.selector\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '同步失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sync () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'sid': this.PROP.sid,\r\n        'skey': this.PROP.skey,\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'SyncKey': this.PROP.syncKey,\r\n        'rr': ~new Date()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsync,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n\r\n        this.updateSyncKey(data)\r\n        this.PROP.skey = data.SKey || this.PROP.skey\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取新信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateSyncKey (data) {\r\n    if (data.SyncKey) {\r\n      this.PROP.syncKey = data.SyncKey\r\n    }\r\n    if (data.SyncCheckKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\r\n      let synckeylist = []\r\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\r\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\r\n      }\r\n      this.PROP.formatedSyncKey = synckeylist.join('|')\r\n    }\r\n  }\r\n\r\n  logout () {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        redirect: 1,\r\n        type: 0,\r\n        skey: this.PROP.skey,\r\n        lang: 'zh_CN'\r\n      }\r\n\r\n      // data加上会出错，不加data也能登出\r\n      // let data = {\r\n      //   sid: this.PROP.sid,\r\n      //   uin: this.PROP.uin\r\n      // }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxlogout,\r\n        params: params\r\n      }).then(res => {\r\n        return '登出成功'\r\n      }).catch(err => {\r\n        debug(err)\r\n        return '可能登出成功'\r\n      })\r\n    })\r\n  }\r\n\r\n  sendText (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_TEXT,\r\n          'Content': msg,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文本信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendEmoticon (id, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'sys',\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_EMOTICON,\r\n          'EmojiFlag': 2,\r\n          'FromUserName': this.user['UserName'],\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n\r\n      if (id.indexOf('@') === 0) {\r\n        data.Msg.MediaId = id\r\n      } else {\r\n        data.Msg.EMoticonMd5 = id\r\n      }\r\n\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendemoticon,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送表情信息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // file: Stream, Buffer, File, Blob\r\n  uploadMedia (file, filename, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let name, type, size, ext, mediatype, data\r\n      return new Promise((resolve, reject) => {\r\n        if ((typeof (File) !== 'undefined' && file.constructor == File) ||\r\n          (typeof (Blob) !== 'undefined' && file.constructor == Blob)) {\r\n          name = file.name || 'file'\r\n          type = file.type\r\n          size = file.size\r\n          data = file\r\n          return resolve()\r\n        } else if (Buffer.isBuffer(file)) {\r\n          if (!filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = filename\r\n          type = mime.lookup(name)\r\n          size = file.length\r\n          data = file\r\n          return resolve()\r\n        } else if (file.readable) {\r\n          if (!file.path && !filename) {\r\n            return reject(new Error('文件名未知'))\r\n          }\r\n          name = path.basename(file.path || filename)\r\n          type = mime.lookup(name)\r\n          file.pipe(bl((err, buffer) => {\r\n            if (err) {\r\n              return reject(err)\r\n            }\r\n            size = buffer.length\r\n            data = buffer\r\n            return resolve()\r\n          }))\r\n        }\r\n      }).then(() => {\r\n        ext = name.match(/.*\\.(.*)/)\r\n        if (ext) {\r\n          ext = ext[1].toLowerCase()\r\n        } else {\r\n          ext = ''\r\n        }\r\n\r\n        switch (ext) {\r\n          case 'bmp':\r\n          case 'jpeg':\r\n          case 'jpg':\r\n          case 'png':\r\n            mediatype = 'pic'\r\n            break\r\n          case 'mp4':\r\n            mediatype = 'video'\r\n            break\r\n          default:\r\n            mediatype = 'doc'\r\n        }\r\n\r\n        let clientMsgId = getClientMsgId()\r\n\r\n        let uploadMediaRequest = JSON.stringify({\r\n          BaseRequest: this.getBaseRequest(),\r\n          ClientMediaId: clientMsgId,\r\n          TotalLen: size,\r\n          StartPos: 0,\r\n          DataLen: size,\r\n          MediaType: 4,\r\n          UploadType: 2,\r\n          FromUserName: this.user.UserName,\r\n          ToUserName: toUserName || this.user.UserName\r\n        })\r\n\r\n        let form = new FormData()\r\n        form.append('name', name)\r\n        form.append('type', type)\r\n        form.append('lastModifiedDate', new Date().toGMTString())\r\n        form.append('size', size)\r\n        form.append('mediatype', mediatype)\r\n        form.append('uploadmediarequest', uploadMediaRequest)\r\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\r\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\r\n        form.append('filename', data, {\r\n          filename: name,\r\n          contentType: type,\r\n          knownLength: size\r\n        })\r\n        return new Promise((resolve, reject) => {\r\n          if (isStandardBrowserEnv) {\r\n            return resolve({\r\n              data: form,\r\n              headers: {}\r\n            })\r\n          } else {\r\n            form.pipe(bl((err, buffer) => {\r\n              if (err) {\r\n                return reject(err)\r\n              }\r\n              return resolve({\r\n                data: buffer,\r\n                headers: form.getHeaders()\r\n              })\r\n            }))\r\n          }\r\n        })\r\n      }).then(data => {\r\n        let params = {\r\n          f: 'json'\r\n        }\r\n\r\n        return this.request({\r\n          method: 'POST',\r\n          url: this.CONF.API_webwxuploadmedia,\r\n          headers: data.headers,\r\n          params: params,\r\n          data: data.data\r\n        })\r\n      }).then(res => {\r\n        let data = res.data\r\n        let mediaId = data.MediaId\r\n        assert.ok(mediaId, res)\r\n\r\n        return {\r\n          name: name,\r\n          size: size,\r\n          ext: ext,\r\n          mediatype: mediatype,\r\n          mediaId: mediaId\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '上传媒体文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendPic (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_IMAGE,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgimg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送图片失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendVideo (mediaId, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.MSGTYPE_VIDEO,\r\n          'MediaId': mediaId,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendmsgvedio,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  sendDoc (mediaId, name, size, ext, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 0,\r\n        'Msg': {\r\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\r\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxsendappmsg,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '发送文件失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  forwardMsg (msg, to) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'fun': 'async',\r\n        'f': 'json',\r\n        'lang': 'zh_CN'\r\n      }\r\n      let clientMsgId = getClientMsgId()\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Scene': 2,\r\n        'Msg': {\r\n          'Type': msg.MsgType,\r\n          'MediaId': '',\r\n          'Content': msg.Content.replace(/&lt;/g, '<').replace(/&gt;/g, '>'),\r\n          'FromUserName': this.user.UserName,\r\n          'ToUserName': to,\r\n          'LocalID': clientMsgId,\r\n          'ClientMsgId': clientMsgId\r\n        }\r\n      }\r\n      let url, pm\r\n      switch (msg.MsgType) {\r\n        case this.CONF.MSGTYPE_TEXT:\r\n          url = this.CONF.API_webwxsendmsg\r\n          if (msg.SubMsgType === this.CONF.MSGTYPE_LOCATION) {\r\n            data.Msg.Type = this.CONF.MSGTYPE_LOCATION\r\n            data.Msg.Content = msg.OriContent.replace(/&lt;/g, '<').replace(/&gt;/g, '>')\r\n          }\r\n          break\r\n        case this.CONF.MSGTYPE_IMAGE:\r\n          url = this.CONF.API_webwxsendmsgimg\r\n          break\r\n        case this.CONF.MSGTYPE_EMOTICON:\r\n          url = this.CONF.API_webwxsendemoticon\r\n          params.fun = 'sys'\r\n          data.Msg.EMoticonMd5 = msg.Content.replace(/^[\\s\\S]*?md5\\s?=\\s?\"(.*?)\"[\\s\\S]*?$/, '$1')\r\n          if (!data.Msg.EMoticonMd5) {\r\n            throw new Error('商店表情不能转发')\r\n          }\r\n          data.Msg.EmojiFlag = 2\r\n          data.Scene = 0\r\n          delete data.Msg.MediaId\r\n          delete data.Msg.Content\r\n          break\r\n        case this.CONF.MSGTYPE_MICROVIDEO:\r\n        case this.CONF.MSGTYPE_VIDEO:\r\n          url = this.CONF.API_webwxsendmsgvedio\r\n          data.Msg.Type = this.CONF.MSGTYPE_VIDEO\r\n          break\r\n        case this.CONF.MSGTYPE_APP:\r\n          url = this.CONF.API_webwxsendappmsg\r\n          data.Msg.Type = msg.AppMsgType\r\n          data.Msg.Content = data.Msg.Content.replace(\r\n            /^[\\s\\S]*?(<appmsg[\\s\\S]*?<attachid>)[\\s\\S]*?(<\\/attachid>[\\s\\S]*?<\\/appmsg>)[\\s\\S]*?$/,\r\n            `$1${msg.MediaId}$2`)\r\n          break\r\n        default:\r\n          throw new Error('该消息类型不能直接转发')\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: url,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '转发消息失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getMsgImg (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey,\r\n        type: 'big'\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetmsgimg,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取图片或表情失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVideo (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvideo,\r\n        headers: {\r\n          'Range': 'bytes=0-'\r\n        },\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取视频失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getVoice (msgId) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        MsgID: msgId,\r\n        skey: this.PROP.skey\r\n      }\r\n\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxgetvoice,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取声音失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getHeadImg (HeadImgUrl) {\r\n    return Promise.resolve().then(() => {\r\n      let url = this.CONF.origin + HeadImgUrl\r\n      return this.request({\r\n        method: 'GET',\r\n        url: url,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取头像失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  getDoc (FromUserName, MediaId, FileName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        sender: FromUserName,\r\n        mediaid: MediaId,\r\n        filename: FileName,\r\n        fromuser: this.user.UserName,\r\n        pass_ticket: this.PROP.passTicket,\r\n        webwx_data_ticket: this.PROP.webwxDataTicket\r\n      }\r\n      return this.request({\r\n        method: 'GET',\r\n        url: this.CONF.API_webwxdownloadmedia,\r\n        params: params,\r\n        responseType: 'arraybuffer'\r\n      }).then(res => {\r\n        return {\r\n          data: res.data,\r\n          type: res.headers['content-type']\r\n        }\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '获取文件失败'\r\n      throw err;\r\n    })\r\n  }\r\n\r\n  verifyUser (UserName, Ticket) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        'BaseRequest': this.getBaseRequest(),\r\n        'Opcode': 3,\r\n        'VerifyUserListSize': 1,\r\n        'VerifyUserList': [{\r\n          'Value': UserName,\r\n          'VerifyUserTicket': Ticket\r\n        }],\r\n        'VerifyContent': '',\r\n        'SceneListCount': 1,\r\n        'SceneList': [33],\r\n        'skey': this.PROP.skey\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxverifyuser,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '通过好友请求失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n    /**\r\n     * 添加好友\r\n     * @param UserName 待添加用户的UserName\r\n     * @param content\r\n     * @returns {Promise.<TResult>}\r\n     */\r\n  addFriend (UserName, content = '我是' + this.user.NickName) {\r\n    let params = {\r\n      'pass_ticket': this.PROP.passTicket,\r\n      'lang': 'zh_CN'\r\n    }\r\n\r\n    let data = {\r\n      'BaseRequest': this.getBaseRequest(),\r\n      'Opcode': 2,\r\n      'VerifyUserListSize': 1,\r\n      'VerifyUserList': [{\r\n        'Value': UserName,\r\n        'VerifyUserTicket': ''\r\n      }],\r\n      'VerifyContent': content,\r\n      'SceneListCount': 1,\r\n      'SceneList': [33],\r\n      'skey': this.PROP.skey\r\n    }\r\n\r\n    return this.request({\r\n      method: 'POST',\r\n      url: this.CONF.API_webwxverifyuser,\r\n      params: params,\r\n      data: data\r\n    }).then(res => {\r\n      let data = res.data\r\n      assert.equal(data.BaseResponse.Ret, 0, res)\r\n      return data\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '添加好友失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // Topic: Chatroom name\r\n  // MemberList format:\r\n  // [\r\n  //   {\"UserName\":\"@250d8d156ad9f8b068c2e3df3464ecf2\"},\r\n  //   {\"UserName\":\"@42d725733741de6ac53cbe3738d8dd2e\"}\r\n  // ]\r\n  createChatroom (Topic, MemberList) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'pass_ticket': this.PROP.passTicket,\r\n        'lang': 'zh_CN',\r\n        'r': ~new Date()\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        MemberCount: MemberList.length,\r\n        MemberList: MemberList,\r\n        Topic: Topic\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxcreatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '创建群失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // fun: 'addmember' or 'delmember' or 'invitemember'\r\n  updateChatroom (ChatRoomUserName, MemberList, fun) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        fun: fun\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName\r\n      }\r\n      if (fun === 'addmember') {\r\n        data.AddMemberList = MemberList.toString()\r\n      } else if (fun === 'delmember') {\r\n        data.DelMemberList = MemberList.toString()\r\n      } else if (fun === 'invitemember') {\r\n        data.InviteMemberList = MemberList.toString()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '邀请或踢出群成员失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  // OP: 1 联系人置顶 0 取消置顶\r\n  // 若不传RemarkName，则会覆盖以设置的联系人备注名\r\n  opLog (UserName, OP, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 3,\r\n        OP: OP,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '置顶或取消置顶失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateRemarkName (UserName, RemarkName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        pass_ticket: this.PROP.passTicket,\r\n        'lang': 'zh_CN'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        CmdId: 2,\r\n        RemarkName: RemarkName,\r\n        UserName: UserName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxoplog,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      err.tips = '设置用户标签失败'\r\n      throw err\r\n    })\r\n  }\r\n\r\n  updateChatRoomName (ChatRoomUserName, NewName) {\r\n    return Promise.resolve().then(() => {\r\n      let params = {\r\n        'fun': 'modtopic'\r\n      }\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        ChatRoomName: ChatRoomUserName,\r\n        NewTopic: NewName\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxupdatechatroom,\r\n        params: params,\r\n        data: data\r\n      }).then(res => {\r\n        console.log(JSON.stringify(res))\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('更新群名失败')\r\n    })\r\n  }\r\n\r\n  revokeMsg (msgId, toUserName) {\r\n    return Promise.resolve().then(() => {\r\n      let data = {\r\n        BaseRequest: this.getBaseRequest(),\r\n        SvrMsgId: msgId,\r\n        ToUserName: toUserName,\r\n        ClientMsgId: getClientMsgId()\r\n      }\r\n      return this.request({\r\n        method: 'POST',\r\n        url: this.CONF.API_webwxrevokemsg,\r\n        data: data\r\n      }).then(res => {\r\n        let data = res.data\r\n        assert.equal(data.BaseResponse.Ret, 0, res)\r\n        return data\r\n      })\r\n    }).catch(err => {\r\n      debug(err)\r\n      throw new Error('撤回消息失败')\r\n    })\r\n  }\r\n\r\n  getBaseRequest () {\r\n    return {\r\n      Uin: parseInt(this.PROP.uin),\r\n      Sid: this.PROP.sid,\r\n      Skey: this.PROP.skey,\r\n      DeviceID: getDeviceID()\r\n    }\r\n  }\r\n}\r\n"]}